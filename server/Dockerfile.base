FROM rust:1.56-slim
WORKDIR /server
COPY Cargo.* .

# Create fake project to build the dependencies
RUN mkdir src && echo "fn main() {}" >> src/main.rs

# Install and compile dependencies to development
RUN cargo install cargo-watch &&\
    cargo build

# Install and compile dependencies to tests
RUN cargo install rustfilt cargo-binutils &&\
    rustup toolchain install nightly &&\
    rustup +nightly component add llvm-tools-preview &&\
    cargo test --no-run &&\
    RUSTFLAGS="-Z instrument-coverage" cargo +nightly test --no-run

# Install and compile dependencies to production
RUN apt-get update &&\
    apt-get install musl-tools -y &&\
    rustup target add x86_64-unknown-linux-musl &&\
    cargo build --release --target=x86_64-unknown-linux-musl

# Remove targets builded from fake project
RUN rm -r src &&\
    rm target/debug/deps/rust_web_server* &&\
    rm target/x86_64-unknown-linux-musl/release/deps/rust_web_server* &&\
    rm target/x86_64-unknown-linux-musl/release/rust_web_server*

# Build
# docker build -f Dockerfile.base -t base_image .

# Run
# docker run -it --rm \
#     -v "$(pwd)/release:/server/release" \
#     -v "$(pwd)/coverage:/server/coverage" \
#     -v "$(pwd)/scripts:/server/scripts" \
#     -v "$(pwd)/src:/server/src" \
#     -v "$(pwd)/.env:/server/.env" \
#     base_image
