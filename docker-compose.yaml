version: '3.8'

services:
  server_base_image:
    image: server_base_image_postgres
    container_name: server_base_image_postgres
    build:
      context: ./server
      dockerfile: Dockerfile.base

  server_build:
    image: server
    container_name: server
    build:
      context: ./server
    depends_on:
      - server_base_image

  server:
    image: server_base_image_postgres
    container_name: server
    command: scripts/start_dev.sh
    ports:
      - 8080:8080
    env_file: server/.env
    volumes:
      - ./server/scripts:/server/scripts:ro
      - ./server/src:/server/src:ro
      - ./server/.env:/server/.env:ro
    depends_on:
      - server_base_image
      - database_seed

  server_test:
    image: server_base_image_postgres
    container_name: server_test
    command: scripts/test_watch.sh
    env_file: server/.env
    environment:
      - RUST_ENV=test
    volumes:
      - ./server/coverage:/server/coverage:rw
      - ./server/scripts:/server/scripts:ro
      - ./server/src:/server/src:ro
      - ./server/.env:/server/.env:ro
      - ./server/Cargo.toml:/server/Cargo.toml:ro
      - ./server/Cargo.lock:/server/Cargo.lock:ro
    depends_on:
      - server_base_image
      - database_schema

  database:
    image: postgres:14-alpine
    container_name: database
    ports:
      - 5432:5432
    env_file: server/.env

  database_schema:
    image: postgres:14-alpine
    container_name: database_schema
    command: scripts/database_schema.sh
    env_file: server/.env
    depends_on:
      - database
    volumes:
      - ./server/database:/database:ro
      - ./server/scripts:/scripts:ro

  database_seed:
    image: postgres:14-alpine
    container_name: database_seed
    command: scripts/database_seed.sh
    env_file: server/.env
    depends_on:
      - database_schema
    volumes:
      - ./server/database:/database:ro
      - ./server/scripts:/scripts:ro

  client_base_image:
    image: client_base_image
    container_name: client_base_image
    build:
      context: ./client
      dockerfile: Dockerfile.base

  client_build:
    image: client
    container_name: client
    build:
      context: ./client
      args:
        - SERVER_URL=http://localhost:8080
    depends_on:
      - client_base_image

  client:
    image: client_base_image
    container_name: client
    command: npm start
    working_dir: /client
    ports:
      - 3000:3000
    volumes:
      - ./client/coverage:/client/coverage:rw
      - ./client/public:/client/public:ro
      - ./client/src:/client/src:ro
      - ./client/.env.development:/client/.env.development:ro
      - ./client/.eslintrc.js:/client/.eslintrc.js:ro
      - ./client/package.json:/client/package.json:ro
      - ./client/package-lock.json:/client/package-lock.json:ro
      - ./client/tsconfig.json:/client/tsconfig.json:ro
    depends_on:
      - client_base_image
